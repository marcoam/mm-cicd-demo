apiVersion: v1
kind: Service
metadata:
  labels:
    app: echo
  name: echo
  annotations:
    8080.service.kuma.io/protocol: http
spec:
  ports:
  - port: 8080
    name: high
    protocol: TCP
    targetPort: 8080
  selector:
    app: echo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: echo
  name: echo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echo
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: echo
    spec:
      containers:
      - image: gcr.io/kubernetes-e2e-test-images/echoserver:2.2
        name: echo
        ports:
        - containerPort: 8080
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        resources: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: echo-demo-app
spec:
  ingressClassName: kong
  rules:
  - http:
      paths:
      - path: /echo
        pathType: ImplementationSpecific
        backend:
          service:
            name: echo
            port:
              number: 8080
---
apiVersion: kuma.io/v1alpha1
kind: TrafficPermission
mesh: default
metadata:
  namespace: default
  name: allow-gateway-to-echo
spec:
  sources:
    - match:
        kuma.io/service: kong-mesh-demo-kong-admin_se-kong-mesh_svc_8001
  destinations:
    - match:
        kuma.io/service: echo_se-kong-mesh_svc_8080
---
apiVersion: kuma.io/v1alpha1
kind: OPAPolicy
mesh: default
metadata:
  name: opa-echo-demo
spec:
  selectors:
  - match:
      kuma.io/service: echo_se-kong-mesh_svc_8080
  conf:
    agentConfig: 
      inlineString: |
        decision_logs:
          console: true
    policies:
      - inlineString: | # one of: inlineString, secret
          package envoy.authz
      
          default allow = false
 
          allow {
            action_allowed
          }
          action_allowed {
            input.attributes.request.http.method == "GET"
          }
